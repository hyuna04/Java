package RV.Test;

import java.util.Scanner;

public class T3 {
    public static void main(String[] args) {
//        --------------------배열--------------------
//        1. 사용자가 q를 입력하기 전까지 정수를 입력받아 배열에 저장하고 배열의 모든 요소를 출력하는 프로그램의 순서도를 그리세요.
//        순서도
//        배열 arr 선언
//        배열의 크기 size 초기화
//        인덱스 i를 0으로 초기화
//        반복문:
//        정수 num을 입력받음
//        만약 num이 'q'와 같으면 반복문 탈출
//        그렇지 않으면:
//        arr[i]에 num을 저장
//        i를 1 증가
//        반복문 종료
//        인덱스 j를 0으로 초기화
//        반복문:
//        arr[j] 출력
//        j를 1 증가
//        만약 j가 i와 같으면 반복문 탈출
//        반복문 종료
//        int[] arr = new int[100]; // 배열 크기는 100으로 지정
//        int size = 100; //배열 크기
//        int i = 0; //배열 인덱스
//        Scanner sc = new Scanner(System.in);
//        while (true) {
//            System.out.print("정수 입력: ");
//            String input = sc.next();
//            if (input.equals("q")) {
//                break;
//            }
//            int num = Integer.parseInt(input);
//            arr[i] = num;
//            i++;
//            if (i >= size) {
//                System.out.println("배열 크기 초과");
//                break;
//
//            }
//
//            for (int j = 0; j < i; j++) {
//                System.out.println(arr[j]);
//            }

//        2. 1부터 100까지의 숫자 중에서 짝수만 배열에 저장하고 배열의 합을 계산하여 출력하는 프로그램의 순서도를 그리세요.
//        순서도
//        배열 arr 선언                            //int[] arr = new int[50];
//        변수 sum을 0으로 초기화                    //int sum = 0;
//        인덱스 i를 0으로 초기화                    //int i = 0;
//        반복문:                                  //while (true) {
//        i를 1 증가                               //i++;
//                                                //      if (i >100) {
//        만약 i가 100보다 크면 반복문 종료           //            break;
//                                                //      }
//        만약 i가 짝수이면:                        //       if (i % 2 ==0) {
//        arr[i/2]에 i를 저장                      //              arr[i/2 - 1] = 1;
//        sum에 i를 더함                           //              sum += 1;
//                                                //                      }
//        그렇지 않으면 다음 반복으로 진행             //
//        반복문 종료                               //              }
//        sum 출력                                // System.out.println("배열의 요소의 합: " + sum);

//        int[] arr = new int[50]; // 배열 크기는 50으로 가정
//        int sum = 0; // 배열 요소의 합
//        int i = 0; // 반복문 인덱스
//
//        while (true) {
//            i++;
//            if (i > 100) {
//                break;
//            }
//            if (i % 2 == 0) {
//                arr[i/2 - 1] = i;
//                sum += i;
//            }
//        }
//
//        System.out.println("배열 요소의 합: " + sum);

//        3. 사용자가 입력한 10개의 정수를 배열에 저장하고 최소값과 최대값을 찾아서 출력하는 프로그램의 순서도를 그리세요.
//        시작
//        배열 arr 선언
//        변수 min을 arr[0]으로 초기화
//        변수 max을 arr[0]으로 초기화
//
//        반복문 i를 0부터 9까지:
//        정수 num을 입력받음
//        arr[i]에 num을 저장
//        만약 num이 min보다 작으면:
//        min을 num으로 변경
//        만약 num이 max보다 크면:
//        max을 num으로 변경
//
//        최소값 출력
//        최대값 출력


        int[] arr = new int[10];
        int min = 0, max = 0;

        Scanner sc = new Scanner(System.in);

        for (int i = 0; i < 10; i++) {
            System.out.print("정수 입력: ");
            int num = sc.nextInt();
            arr[i] = num;

            if (i == 0) {
                min = num;
                max = num;
            } else {
                if (num < min) {
                    min = num;
                }
                if (num > max) {
                    max = num;
                }
            }
        }

        System.out.println("최소값: " + min);
        System.out.println("최대값: " + max);

//
//                --------------------클래스--------------------
//        1. 학생 클래스의 클래스 다이어그램을 작성하세요.
//
//        2. 원(Circle) 클래스의 클래스 다이어그램을 작성하세요.
//
//        3. 계좌 클래스의 클래스 다이어그램을 작성하세요.
//
//                --------------------상속--------------------
//        1. 부모클래스인 알바라는 클래스의 클래스 다이어그램을 만들고 알바를 상속받은 쿠팡맨이랑 캐셔 클래스의 클래스 다이어그램을 작성하세요.
//
//        2. 게시판 인터페이스의 클래스 다이어그램을 작성하고 게시판 인터페이스를 상속받은 자유게시판 클래스와 공지사항 클래스의 다이어그램을 작성하세요.
//
//
//        --------------------컬렉션--------------------
//        1. Map을 이용해서 음식 이름과 가격을 저장하고 사용자가 입력한 음식의 이름과 수량으로 최종 금액을 출력하는 순서도를 그리세요.
//
//        2. Map을 이용해서 학생의 이름과 점수를 저장하고 점수가 90점 이상인 학생의 이름을 모두 출력하는 프로그램의 순서도를 그리세요.
//
//        3. 현대차의 차종과 판매량을 저장하는 Map 한 개와 기아차의 차종과 판매량을 저장하는 Map 한 개를 만들어서
//        List에 둘 다 저장합니다. 회사별로 가장 판매량이 높은 차종의 Entry를 뽑아서 새로운 List에 저장하고
//        출력하는 프로그램의 순서도를 그리세요. (현대 차종은 아반떼, 소나타, 그랜저 기아 차종은, k5, k7, k9, 판매량은 마음대로 정하시면 됩니다.)    }
        }
    }